# don't send the nginx version number in error pages and Server header
server_tokens off;

server {
  listen 80;
  server_name property_project;
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }
  location / {
      return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name home.intensifly.io;
  charset     utf8;
  autoindex   off;
  access_log  /srv/www/code/logs/intensifly_access.log;
  error_log   /srv/www/code/logs/intensifly_error.log error;
  set         $backend_home /srv/www/code;

  ssl_certificate /etc/letsencrypt/live/home.intensifly.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/home.intensifly.io/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {

  }

  location /api/ {
    root $project_home;
    try_files $uri @backend;
  }

  location @frontend {

  }

  location @backend {
    proxy_pass http://python:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 

    # Cache disabling. It is needed for quickbooks publication https://developer.intuit.com/app/developer/qbo/docs/list-on-the-app-store/security-requirements
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
    expires off;
    etag off;
    #

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.plot.ly/plotly-latest.min.js https://connect.facebook.net; img-src 'self' data: blob:; style-src 'self' 'unsafe-inline'; frame-src https://www.facebook.com; font-src 'self'; object-src 'none'";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Allow "GET, POST, PUT, DELETE, PATCH" always;
    if ( $request_method !~ ^(GET|POST|PUT|DELETE|PATCH)$ ) {
        return 405;
    }

    proxy_cookie_path / "/; SameSite=None; HTTPOnly; Secure";
}
}